name: nomflix deployment

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: checkout Github Action
        uses: actions/checkout@v3

      - name: .env setting
        run: |
          echo "REACT_APP_MOVIE_API_KEY=${{secrets.REACT_APP_MOVIE_API_KEY}}" >> .env
          echo "REACT_APP_API_KEY=${{secrets.REACT_APP_API_KEY}}" >> .env
          echo "REACT_APP_AUTH_DOMAIN=${{secrets.REACT_APP_AUTH_DOMAIN}}" >> .env
          echo "REACT_APP_PROJECT_ID${{secrets.REACT_APP_PROJECT_ID}}" >> .env
          echo "REACT_APP_STORAGE_BUCKET${{secrets.REACT_APP_STORAGE_BUCKET}}" >> .env
          echo "REACT_APP_MESSAGIN_ID${{secrets.REACT_APP_MESSAGIN_ID}}" >> .env
          echo "REACT_APP_APP_ID${{secrets.REACT_APP_APP_ID}}" >> .env
          echo "REACT_APP_BEARER_TOKEN${{secrets.REACT_APP_BEARER_TOKEN}}" >> .env

      - name: Install dependencies
        run: npm install

      - name: Build
        run: CI='false' npm run build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ap-northeast-2

      - name: Deploy to S3
        env:
          BUCKET_NAME: ${{secrets.AWS_BUCKET_NAME}}
        run: aws s3 sync ./build s3://$BUCKET_NAME --acl bucket-owner-full-control

      - name: Invalidate CloudFront Cache
        env:
          CLOUD_FRONT_ID: ${{secrets.AWS_CLOUDFRONT_ID}}
        run: aws cloudfront create-invalidation --distribution-id $CLOUD_FRONT_ID --path "/*"
